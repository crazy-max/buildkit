name: dockerd

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  issue_comment:
    types:
      - created
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker version'
        required: true
        default: 'https://github.com/moby/moby.git'

env:
  REPO_SLUG_ORIGIN: "moby/buildkit:latest"
  CACHE_GHA_SCOPE_IT: "integration-tests"
  CACHE_GHA_SCOPE_BINARIES: "binaries"
  BUILDX_VERSION: "v0.8.2"  # leave empty to use the one available on GitHub virtual environment
  COMMENT_TRIGGER: "/test-dockerd"
  COMMENT_REACTION: "rocket"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      trigger: ${{ steps.check.outputs.trigger }}
    steps:
      -
        name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
      -
        name: Check trigger
        id: check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let trigger = false;
            if (context.eventName === "issue_comment" && context.payload.issue.pull_request) {
              trigger = context.payload.comment.body.includes("${{ env.COMMENT_TRIGGER }}");
              console.log("trigger on comment:", trigger);
            } else if (context.eventName === "workflow_dispatch") {
              trigger = true;
              console.log("trigger workflow_dispatch:", trigger);
            }
            
            core.setOutput("trigger", trigger ? "true" : "false");
            
            // return if not triggered or workflow dispatch
            if (!trigger || context.eventName === "workflow_dispatch") {
              console.log("skipped");
              return;
            }
            
            // check permissions
            const actorPermission = (await github.rest.repos.getCollaboratorPermissionLevel({
              ...context.repo,
              username: context.actor
            })).data.permission
            const isPermitted = ['write', 'admin'].includes(actorPermission)
            if (!isPermitted) {
              // error comment
              const errorMessage = 'Only users with write permission to the respository can run `${{ env.COMMENT_TRIGGER }}`'
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: errorMessage,
              })
              core.setFailed(errorMessage)
              return;
            }
            
            // pull request from fork
            const pullRequest = await github.rest.pulls.get({
              ...context.repo,
              pull_number: context.issue.number,
            })
            if (context.payload.repository.full_name !== pullRequest.data.head.repo.full_name) {
              const errorMessage = '`${{ env.COMMENT_TRIGGER }}` is not supported on pull requests from forked repositories.'
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: errorMessage,
              })
              core.setFailed(errorMessage)
            }
            
            // add reaction
            await github.rest.reactions.createForIssueComment({
              ...context.repo,
              comment_id: context.payload.comment.id,
              content: "${{ env.COMMENT_REACTION }}",
            });

  prepare:
    runs-on: ubuntu-latest
    if: needs.check.outputs.trigger == 'true'
    needs:
      - check
    steps:
      -
        name: Check version
        run: |
          version=${{ github.event.inputs.version }}
          if [ -z "$version" ]; then
            version=https://github.com/moby/moby.git
          fi
          echo "DOCKER_VERSION=$version" >> $GITHUB_ENV
      -
        name: Check build
        uses: actions/github-script@v6
        id: build
        with:
          result-encoding: string
          script: |
            try {
              new URL("${{ env.DOCKER_VERSION }}");
            } catch (e) {
              return false;
            }
            return true;
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Build
        if: steps.build.outputs.result == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKER_VERSION }}
          target: binary
          outputs: /tmp/moby
      -
        # FIXME: remove symlink and rename bin. should be fixed upstream on moby.
        name: Rename binary
        if: steps.build.outputs.result == 'true'
        run: |
          rm /tmp/moby/binary-daemon/dockerd
          mv /tmp/moby/binary-daemon/dockerd-dev /tmp/moby/binary-daemon/dockerd
      -
        name: Download
        if: steps.build.outputs.result != 'true'
        run: |
          mkdir -p /tmp/moby/binary-daemon
          cd /tmp/moby/binary-daemon
          wget -qO- "https://download.docker.com/linux/static/stable/x86_64/docker-${{ env.DOCKER_VERSION }}.tgz" | tar xvz --strip 1
      -
        name: Upload dockerd
        uses: actions/upload-artifact@v2
        with:
          name: dockerd
          path: /tmp/moby/binary-daemon/dockerd
          if-no-files-found: error

  test:
    runs-on: ubuntu-latest
    if: needs.check.outputs.trigger == 'true'
    needs:
      - check
      - prepare
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - ./client
          - ./cmd/buildctl
          - ./solver
          - ./frontend
          - ./frontend/dockerfile
        typ:
          - integration
        include:
          - pkg: ./...
            skip-integration-tests: 1
    steps:
      -
        name: Checkout
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3
      -
        name: Checkout pull request branch
        if: github.event_name == 'issue_comment'
        uses: actions/checkout@v3
        with:
          ref: ${{ format('refs/pull/{0}/merge', github.event.issue.number) }}
      -
        name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v1
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Download dockerd
        uses: actions/download-artifact@v2
        with:
          name: dockerd
          path: ./build/
      -
        name: Fix dockerd perms
        run: |
          chmod +x ./build/dockerd
      -
        name: Update daemon.json
        run: |
          sudo rm /etc/docker/daemon.json
          sudo service docker restart
          docker version
          docker info
      -
        name: Test
        run: |
          ./hack/test ${{ matrix.typ }}
        env:
          TEST_DOCKERD: "1"
          TEST_DOCKERD_BINARY: "./build/dockerd"
          TESTPKGS: "${{ matrix.pkg }}"
          TESTFLAGS: "-v --parallel=1 --timeout=30m --run=//worker=dockerd$"
          SKIP_INTEGRATION_TESTS: "${{ matrix.skip-integration-tests }}"
          CACHE_FROM: "type=gha,scope=${{ env.CACHE_GHA_SCOPE_IT }} type=gha,scope=${{ env.CACHE_GHA_SCOPE_BINARIES }}"
