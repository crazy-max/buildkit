name: validate

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
      - 'dockerfile/*'
  pull_request:

env:
  REPO_SLUG_ORIGIN: "moby/buildkit:latest"
  BUILDX_VERSION: "v0.9.1"  # leave empty to use the one available on GitHub virtual environment

jobs:
  list-commits:
    runs-on: ubuntu-20.04
    outputs:
      commits: ${{ steps.commits.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
      -
        name: List commits
        id: commits
        uses: actions/github-script@v6
        with:
          script: |
            let matrix = [];
            core.info(`context.eventName: ${context.eventName}`);
            if (context.eventName != 'pull_request') {
              core.info('Not a pull request, skipping');
              matrix.push('');
            } else {
              await core.group(`Retrieveing commits for PR ${context.issue.number}`, async () => {
                const commits = await github.rest.pulls.listCommits({
                  ...context.repo,
                  pull_number: context.issue.number,
                });
                core.info(JSON.stringify(commits, null, 2));
                matrix = commits.map(res => res.data.sha);
              });
            }
            core.info('matrix', JSON.stringify(commits));
            core.setOutput('matrix', JSON.stringify(matrix));

  validate:
    runs-on: ubuntu-20.04
    needs:
      - list-commits
    strategy:
      fail-fast: false
      matrix:
        commit: ${{ fromJson(needs.list-commits.outputs.commits) }}
        script:
          - ./hack/lint
          - ./hack/validate-vendor
          - ./hack/validate-generated-files
          - ./hack/validate-shfmt
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.commit }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Run
        run: |
          ${{ matrix.script }}

  build:
    runs-on: ubuntu-20.04
    needs:
      - list-commits
    strategy:
      fail-fast: false
      matrix:
        commit: ${{ fromJson(needs.list-commits.outputs.commits) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.commit }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          target: buildkit
          outputs: type=cacheonly
