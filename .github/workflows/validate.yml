name: validate

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
      - 'dockerfile/*'
  pull_request:

env:
  REPO_SLUG_ORIGIN: "moby/buildkit:latest"
  BUILDX_VERSION: "v0.9.1"  # leave empty to use the one available on GitHub virtual environment

jobs:
  list-commits:
    runs-on: ubuntu-20.04
    outputs:
      commits: ${{ steps.commits.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: List commits
        if: github.event_name == 'pull_request'
        id: commits
        uses: actions/github-script@v6
        with:
          script: |
            const commits: string[] = return (
              await octokit.paginate(octokit.pulls.listCommits, {
                ...github.context.repo,
                pull_number: pr.number,
              })
            ).map(commit => {
              return commit.sha;
            });
            core.setOutput('matrix', JSON.stringify(commits));
      -
        name: Show commits
        run: |
          echo ${{ steps.commits.outputs.matrix }}

  validate:
    runs-on: ubuntu-20.04
    needs:
      - list-commits
    strategy:
      fail-fast: false
      matrix:
        commit: ${{ fromJson(needs.list-commits.outputs.commits) }}
        script:
          - ./hack/lint
          - ./hack/validate-vendor
          - ./hack/validate-generated-files
          - ./hack/validate-shfmt
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.commit }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Run
        run: |
          ${{ matrix.script }}

  build:
    runs-on: ubuntu-20.04
    needs:
      - list-commits
    strategy:
      fail-fast: false
      matrix:
        commit: ${{ fromJson(needs.list-commits.outputs.commits) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.commit }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          target: buildkit
          outputs: type=cacheonly
